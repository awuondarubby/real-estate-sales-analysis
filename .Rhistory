# 1. Distribution of Sale Amount (log scale for better visualization)
ggplot(real_estate_clean2, aes(x = Sale.Amount)) +
geom_histogram(bins = 50, fill = "blue", alpha = 0.7) +
scale_x_log10() +
labs(title = "Distribution of Sale Amount (log scale)", x = "Sale Amount (log scale)", y = "Count")
# 2. Distribution of Assessed Value (log scale)
ggplot(real_estate_clean2, aes(x = Assessed.Value)) +
geom_histogram(bins = 50, fill = "green", alpha = 0.7) +
scale_x_log10() +
labs(title = "Distribution of Assessed Value (log scale)", x = "Assessed Value (log scale)", y = "Count")
# 3. Relationship between Assessed Value and Sale Amount (scatter plot, sample 10,000 points for speed)
sample_data <- real_estate_clean2 %>% sample_n(10000)
ggplot(sample_data, aes(x = Assessed.Value, y = Sale.Amount)) +
geom_point(alpha = 0.3, color = "purple") +
scale_x_log10() + scale_y_log10() +
labs(title = "Assessed Value vs Sale Amount (log-log scale)", x = "Assessed Value", y = "Sale Amount")
# 4. Number of sales per Year
sales_per_year <- real_estate_clean2 %>%
group_by(Year) %>%
summarise(Total_Sales = n())
ggplot(sales_per_year, aes(x = Year, y = Total_Sales)) +
geom_line(color = "red") +
labs(title = "Number of Sales per Year", x = "Year", y = "Total Sales")
# 5. Sales count by Property Type
sales_by_type <- real_estate_clean2 %>%
group_by(Property.Type) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
ggplot(sales_by_type, aes(x = reorder(Property.Type, Count), y = Count)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(title = "Number of Sales by Property Type", x = "Property Type", y = "Count")
library(scales)  # for comma()
sales_by_type <- real_estate_clean2 %>%
group_by(Property.Type) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
ggplot(sales_by_type, aes(x = reorder(Property.Type, Count), y = Count)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
scale_y_continuous(labels = comma) +  # format counts with commas
labs(title = "Number of Sales by Property Type", x = "Property Type", y = "Count")
ggplot(avg_prices_year_type, aes(x = Year, y = Avg_Sale_Amount, color = Property.Type)) +
geom_line() +
scale_y_log10(labels = scales::dollar_format(prefix = "$")) +  # log scale for better visualization
labs(title = "Average Sale Amount Over Time by Property Type",
x = "Year", y = "Average Sale Amount (log scale)", color = "Property Type") +
theme_minimal()
avg_prices_year_type <- real_estate_clean2 %>%
group_by(Year, Property.Type) %>%
summarise(
Avg_Sale_Amount = mean(Sale.Amount, na.rm = TRUE),
Avg_Assessed_Value = mean(Assessed.Value, na.rm = TRUE),
Count = n()
) %>%
filter(!is.na(Property.Type))
ggplot(avg_prices_year_type, aes(x = Year, y = Avg_Sale_Amount, color = Property.Type)) +
geom_line() +
scale_y_log10(labels = scales::dollar_format(prefix = "$")) +
labs(title = "Average Sale Amount Over Time by Property Type",
x = "Year", y = "Average Sale Amount (log scale)", color = "Property Type") +
theme_minimal()
ggplot(avg_prices_year_type, aes(x = Year, y = Avg_Assessed_Value, color = Property.Type)) +
geom_line() +
scale_y_log10(labels = scales::dollar_format(prefix = "$")) +
labs(title = "Average Assessed Value Over Time by Property Type",
x = "Year", y = "Average Assessed Value (log scale)", color = "Property Type") +
theme_minimal()
library(ggplot2)
library(scales)
# Plot average sale amount over time by Property Type
ggplot(avg_prices_year_type, aes(x = Year, y = Avg_Sale_Amount, color = Property.Type)) +
geom_line(size = 1) +
scale_y_log10(labels = dollar_format(prefix = "$")) +  # log scale for better visualization
labs(title = "Average Sale Amount Over Time by Property Type",
x = "Year", y = "Average Sale Amount (log scale)", color = "Property Type") +
theme_minimal()
# Plot average assessed value over time by Property Type
ggplot(avg_prices_year_type, aes(x = Year, y = Avg_Assessed_Value, color = Property.Type)) +
geom_line(size = 1) +
scale_y_log10(labels = dollar_format(prefix = "$")) +
labs(title = "Average Assessed Value Over Time by Property Type",
x = "Year", y = "Average Assessed Value (log scale)", color = "Property Type") +
theme_minimal()
avg_prices_year_res <- real_estate_clean2 %>%
filter(Residential.Type != "") %>%
group_by(Year, Residential.Type) %>%
summarise(
Avg_Sale_Amount = mean(Sale.Amount, na.rm = TRUE),
Count = n(),
.groups = "drop"
)
ggplot(avg_prices_year_res, aes(x = Year, y = Avg_Sale_Amount, color = Residential.Type)) +
geom_line(size = 1) +
scale_y_log10(labels = scales::dollar_format(prefix = "$")) +
labs(
title = "Average Sale Amount Over Time by Residential Type",
x = "Year",
y = "Average Sale Amount (log scale)",
color = "Residential Type"
) +
theme_minimal()
sales_count_year_res <- real_estate_clean2 %>%
group_by(Year, Residential.Type) %>%
summarise(Count = n(), .groups = "drop") %>%
filter(!is.na(Residential.Type))
ggplot(sales_count_year_res, aes(x = Year, y = Count, color = Residential.Type)) +
geom_line(size = 1) +
scale_y_continuous(labels = scales::comma) +
labs(
title = "Number of Sales Over Time by Residential Type",
x = "Year",
y = "Count of Sales",
color = "Residential Type"
) +
theme_minimal()
sales_count_year_res <- real_estate_clean2 %>%
group_by(Year, Residential.Type) %>%
summarise(Count = n(), .groups = "drop") %>%
filter(!is.na(Residential.Type))
ggplot(sales_count_year_res, aes(x = Year, y = Count, color = Residential.Type)) +
geom_line(size = 1) +
scale_y_continuous(labels = scales::comma) +
labs(
title = "Number of Sales Over Time by Residential Type",
x = "Year",
y = "Count of Sales",
color = "Residential Type"
) +
theme_minimal()
# Summarize average Sales Ratio by Year and Property Type
sales_ratio_trends <- real_estate_clean2 %>%
group_by(Year, Property.Type) %>%
summarise(
Avg_Sales_Ratio = mean(Sales.Ratio, na.rm = TRUE),
Count = n(),
.groups = 'drop'
) %>%
filter(!is.na(Property.Type))
ggplot(sales_ratio_trends, aes(x = Year, y = Avg_Sales_Ratio, color = Property.Type)) +
geom_line() +
labs(title = "Average Sales Ratio Over Time by Property Type",
x = "Year", y = "Average Sales Ratio",
color = "Property Type") +
theme_minimal()
ggplot(real_estate_clean2, aes(x = Longitude, y = Latitude)) +
geom_point(alpha = 0.3, color = "blue", size = 0.5) +
labs(title = "Geographic Distribution of Real Estate Sales",
x = "Longitude", y = "Latitude") +
theme_minimal()
avg_sales_by_town <- real_estate_clean2 %>%
group_by(Town) %>%
summarise(
Avg_Sale_Amount = mean(Sale.Amount, na.rm = TRUE),
Total_Sales = n()
) %>%
filter(Total_Sales > 100) %>%  # Filter towns with more than 100 sales to focus on significant data
arrange(desc(Avg_Sale_Amount))
head(avg_sales_by_town, 10)
top_towns <- head(avg_sales_by_town, 10)
ggplot(top_towns, aes(x = reorder(Town, Avg_Sale_Amount), y = Avg_Sale_Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
scale_y_continuous(labels = scales::dollar_format(prefix = "$")) +
labs(title = "Top 10 Towns by Average Sale Amount",
x = "Town",
y = "Average Sale Amount")
library(dplyr)      # data wrangling
library(tidyr)      # (future reshaping if needed)
library(stringr)    # string helpers
library(ggplot2)    # plotting
library(scales)     # nicer axis labels
# 1) Load data ---------------------------------------------------------------
real_estate <- read.csv("Real_Estate_Sales_2001-2022_GL.csv",
stringsAsFactors = FALSE)
str(real_estate)
summary(real_estate)
real_estate <- real_estate %>%
mutate(
Date.Recorded = as.Date(Date.Recorded, format = "%m/%d/%Y"),
Year          = as.numeric(format(Date.Recorded, "%Y"))
) %>%
filter(Sale.Amount > 0,
Assessed.Value > 0,
!is.na(Sale.Amount),
!is.na(Assessed.Value))
real_estate <- real_estate %>%
mutate(
Location  = str_remove_all(Location, "POINT \\(|\\)"),
Longitude = as.numeric(str_extract(Location, "-?\\d+\\.\\d+")),
Latitude  = as.numeric(str_extract(Location, "(?<= )-?\\d+\\.\\d+"))
)
# Final clean: keep sensible sales ratios (0–10) & non‑missing years/dates
re_clean <- real_estate %>%
filter(!is.na(Date.Recorded),
!is.na(Year),
Sales.Ratio > 0,
Sales.Ratio < 10)
cat("Rows after full clean:", nrow(re_clean), "\n")
ggplot(re_clean, aes(Sale.Amount)) +
geom_histogram(bins = 50, fill = "steelblue", alpha = .7) +
scale_x_log10(labels = dollar_format()) +
labs(title = "Sale Amount (log scale)", x = "Sale Amount", y = "Count")
ggplot(re_clean, aes(Assessed.Value)) +
geom_histogram(bins = 50, fill = "forestgreen", alpha = .7) +
scale_x_log10(labels = dollar_format()) +
labs(title = "Assessed Value (log scale)", x = "Assessed Value", y = "Count")
set.seed(42)
sample_data <- re_clean %>% sample_n(10000)
ggplot(sample_data, aes(Assessed.Value, Sale.Amount)) +
geom_point(alpha = .3, colour = "purple") +
scale_x_log10(labels = dollar_format()) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Assessed vs Sale (log‑log)", x = "Assessed Value", y = "Sale Amount")
## 4.3 Sales volume per year -------------------------------------------------
sales_per_year <- re_clean %>%
count(Year, name = "Total_Sales")
ggplot(sales_per_year, aes(Year, Total_Sales)) +
geom_line(colour = "red") +
labs(title = "Number of Sales per Year", y = "Total Sales")
## 4.4 Bar: sales count by Property Type ------------------------------------
sales_by_type <- re_clean %>%
count(Property.Type, name = "Count") %>%
arrange(desc(Count))
ggplot(sales_by_type,
aes(x = reorder(Property.Type, -Count), y = Count)) +
geom_bar(stat = "identity", fill = "orange") +
scale_y_continuous(labels = comma) +
labs(title = "Sales Count by Property Type",
x = "Property Type", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 5) Trends by Property Type -------------------------------------------------
avg_by_type_year <- re_clean %>%
group_by(Year, Property.Type) %>%
summarise(Avg_Sale = mean(Sale.Amount),
Avg_Assess = mean(Assessed.Value),
.groups = "drop")
ggplot(avg_by_type_year, aes(Year, Avg_Sale, colour = Property.Type)) +
geom_line(linewidth = 1) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Average Sale Amount by Property Type",
y = "Avg Sale Amount (log)", colour = "Property Type")
ggplot(avg_by_type_year, aes(Year, Avg_Assess, colour = Property.Type)) +
geom_line(linewidth = 1) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Average Assessed Value by Property Type",
y = "Avg Assessed Value (log)", colour = "Property Type")
# 6) Residential‑type trends -------------------------------------------------
avg_by_res_year <- re_clean %>%
filter(Residential.Type != "") %>%
group_by(Year, Residential.Type) %>%
summarise(Avg_Sale = mean(Sale.Amount), .groups = "drop")
ggplot(avg_by_res_year, aes(Year, Avg_Sale, colour = Residential.Type)) +
geom_line(linewidth = 1) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Avg Sale by Residential Type",
y = "Avg Sale (log)", colour = "Residential Type")
res_count_year <- re_clean %>%
count(Year, Residential.Type, name = "Count")
ggplot(res_count_year, aes(Year, Count, colour = Residential.Type)) +
geom_line(linewidth = 1) +
scale_y_continuous(labels = comma) +
labs(title = "Sales Count by Residential Type",
y = "Count", colour = "Residential Type")
# 7) Sales‑ratio trend -------------------------------------------------------
ratio_trend <- re_clean %>%
group_by(Year, Property.Type) %>%
summarise(Avg_Ratio = mean(Sales.Ratio), .groups = "drop")
ggplot(ratio_trend, aes(Year, Avg_Ratio, colour = Property.Type)) +
geom_line() +
labs(title = "Avg Sales Ratio by Property Type",
y = "Average Sales Ratio", colour = "Property Type")
# 8) Top towns by average sale amount ---------------------------------------
top_towns <- re_clean %>%
count(Town, name = "Total_Sales") %>%
filter(Total_Sales > 100) %>%
inner_join(
re_clean %>%
group_by(Town) %>%
summarise(Avg_Sale = mean(Sale.Amount), .groups = "drop"),
by = "Town"
) %>%
arrange(desc(Avg_Sale)) %>%
slice_head(n = 10)
ggplot(top_towns, aes(x = reorder(Town, -Avg_Sale), y = Avg_Sale)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(labels = dollar_format()) +
labs(title = "Top 10 Towns by Average Sale Amount",
x = "Town", y = "Average Sale Amount") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
town_name <- "Ansonia"
town_trend <- re_clean %>%
filter(Town == town_name) %>%
group_by(Year) %>%
summarise(Avg_Sale = mean(Sale.Amount), .groups = "drop")
ggplot(town_trend, aes(Year, Avg_Sale)) +
geom_line(colour = "darkgreen") +
geom_point() +
scale_y_continuous(labels = dollar_format()) +
labs(title = paste("Average Sale in", town_name),
y = "Average Sale Amount")
# Load required libraries
library(dplyr)       # for data manipulation
library(tidyr)       # for data tidying
library(stringr)     # for string manipulation
library(ggplot2)     # for data visualization
library(scales)      # for formatting scales on plots
# Load the dataset
real_estate <- read.csv("Real_Estate_Sales_2001-2022_GL.csv", stringsAsFactors = FALSE)
# Preview structure and summary
str(real_estate)                      # structure of the dataset
summary(real_estate)                 # basic statistics for each column
real_estate$Date.Recorded <- as.Date(real_estate$Date.Recorded, format = "%m/%d/%Y")
real_estate$Year <- as.numeric(format(real_estate$Date.Recorded, "%Y"))
summary(real_estate$Assessed.Value)
summary(real_estate$Sale.Amount)
summary(real_estate$Sales.Ratio)
real_estate_clean <- real_estate %>%
filter(Sale.Amount > 0, Assessed.Value > 0, !is.na(Sale.Amount), !is.na(Assessed.Value))
real_estate_clean <- real_estate_clean %>%
mutate(
Location = str_replace_all(Location, "POINT \\(|\\)", ""),
Longitude = as.numeric(str_extract(Location, "[-]?\\d+\\.\\d+")),
Latitude = as.numeric(str_extract(Location, "(?<= )[-]?\\d+\\.\\d+"))
)
# Further clean data to exclude invalid sales ratios and missing dates/years
real_estate_clean2 <- real_estate_clean %>%
filter(
!is.na(Date.Recorded),
!is.na(Year),
Sales.Ratio > 0,
Sales.Ratio < 10
)
# Compare row counts before and after cleaning
cat("Original rows:", nrow(real_estate), "\n")
cat("After cleaning:", nrow(real_estate_clean2), "\n")
# Distribution of Sale Amount (log scale)
ggplot(real_estate_clean2, aes(x = Sale.Amount)) +
geom_histogram(bins = 50, fill = "blue", alpha = 0.7) +
scale_x_log10() +
labs(title = "Distribution of Sale Amount (log scale)", x = "Sale Amount (log scale)", y = "Count")
getwd()
setwd("C:/Users/Rubby/R-PROGRAMMING/Real-Estate-R-Programming")
getwd()
library(dplyr)      # data manipulation
library(tidyr)      # data tidying
library(stringr)    # string helpers for lat/lon extraction
library(ggplot2)    # plotting
library(scales)     # nicer axis labels / currency formatting
if (!dir.exists("images")) dir.create("images")
real_estate <- read.csv("Real_Estate_Sales_2001-2022_GL.csv",
stringsAsFactors = FALSE)
# 2) Inspect structure & summary -------------------------------------------
str(real_estate)
summary(real_estate)
real_estate <- real_estate %>%
mutate(
Date.Recorded = as.Date(Date.Recorded, format = "%m/%d/%Y"),
Year          = as.numeric(format(Date.Recorded, "%Y"))
) %>%
filter(Sale.Amount > 0,
Assessed.Value > 0,
!is.na(Sale.Amount),
!is.na(Assessed.Value))
real_estate <- real_estate %>%
mutate(
Location  = str_remove_all(Location, "POINT \\(|\\)"),
Longitude = as.numeric(str_extract(Location, "-?\\d+\\.\\d+")),
Latitude  = as.numeric(str_extract(Location, "(?<= )-?\\d+\\.\\d+"))
)
# Filter for valid Sales.Ratio and non‑missing year/date --------------------
re_clean <- real_estate %>%
filter(!is.na(Date.Recorded),
!is.na(Year),
Sales.Ratio > 0,
Sales.Ratio < 10)
cat("Rows after full clean:", nrow(re_clean), "\n")
## 4.1 Sale Amount distribution (log) --------------------------------------
g1 <- ggplot(re_clean, aes(Sale.Amount)) +
geom_histogram(bins = 50, fill = "steelblue", alpha = .7) +
scale_x_log10(labels = dollar_format()) +
labs(title = "Sale Amount (log scale)",
x = "Sale Amount", y = "Count")
print(g1)
ggsave("images/sale_amount_distribution.png", g1, width = 8, height = 5, dpi = 300)
## 4.2 Assessed Value distribution (log) -----------------------------------
g2 <- ggplot(re_clean, aes(Assessed.Value)) +
geom_histogram(bins = 50, fill = "forestgreen", alpha = .7) +
scale_x_log10(labels = dollar_format()) +
labs(title = "Assessed Value (log scale)",
x = "Assessed Value", y = "Count")
print(g2)
ggsave("images/assessed_value_distribution.png", g2, width = 8, height = 5, dpi = 300)
## 4.3 Scatter: Assessed vs Sale (log‑log) ----------------------------------
set.seed(42)
sample_data <- re_clean %>% sample_n(10000)
g3 <- ggplot(sample_data, aes(Assessed.Value, Sale.Amount)) +
geom_point(alpha = .3, colour = "purple") +
scale_x_log10(labels = dollar_format()) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Assessed vs Sale (log‑log)",
x = "Assessed Value", y = "Sale Amount")
print(g3)
ggsave("images/assessed_vs_sale_scatter.png", g3, width = 8, height = 5, dpi = 300)
## 4.4 Sales per Year --------------------------------------------------------
sales_per_year <- re_clean %>%
count(Year, name = "Total_Sales")
g4 <- ggplot(sales_per_year, aes(Year, Total_Sales)) +
geom_line(colour = "red") +
labs(title = "Number of Sales per Year",
x = "Year", y = "Total Sales")
print(g4)
ggsave("images/sales_per_year.png", g4, width = 8, height = 5, dpi = 300)
## 4.5 Sales count by Property Type -----------------------------------------
sales_by_type <- re_clean %>%
count(Property.Type, name = "Count") %>%
arrange(desc(Count))
g5 <- ggplot(sales_by_type,
aes(x = reorder(Property.Type, -Count), y = Count)) +
geom_bar(stat = "identity", fill = "orange") +
scale_y_continuous(labels = comma) +
labs(title = "Sales Count by Property Type",
x = "Property Type", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(g5)
ggsave("images/sales_by_property_type.png", g5, width = 8, height = 5, dpi = 300)
# 5) Trends by Property Type -------------------------------------------------
avg_by_type_year <- re_clean %>%
group_by(Year, Property.Type) %>%
summarise(
Avg_Sale   = mean(Sale.Amount),
Avg_Assess = mean(Assessed.Value),
.groups = "drop")
g6 <- ggplot(avg_by_type_year, aes(Year, Avg_Sale, colour = Property.Type)) +
geom_line(linewidth = 1) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Average Sale Amount by Property Type",
y = "Avg Sale Amount (log)", colour = "Property Type")
print(g6)
ggsave("images/avg_sale_by_property_type.png", g6, width = 8, height = 5, dpi = 300)
g7 <- ggplot(avg_by_type_year, aes(Year, Avg_Assess, colour = Property.Type)) +
geom_line(linewidth = 1) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Average Assessed Value by Property Type",
y = "Avg Assessed Value (log)", colour = "Property Type")
print(g7)
ggsave("images/avg_assessed_by_property_type.png", g7, width = 8, height = 5, dpi = 300)
avg_by_res_year <- re_clean %>%
filter(Residential.Type != "") %>%
group_by(Year, Residential.Type) %>%
summarise(Avg_Sale = mean(Sale.Amount), .groups = "drop")
g8 <- ggplot(avg_by_res_year, aes(Year, Avg_Sale, colour = Residential.Type)) +
geom_line(linewidth = 1) +
scale_y_log10(labels = dollar_format()) +
labs(title = "Avg Sale by Residential Type",
y = "Avg Sale (log)", colour = "Residential Type")
print(g8)
ggsave("images/avg_sale_by_res_type.png", g8, width = 8, height = 5, dpi = 300)
res_count_year <- re_clean %>%
count(Year, Residential.Type, name = "Count")
g9 <- ggplot(res_count_year, aes(Year, Count, colour = Residential.Type)) +
geom_line(linewidth = 1) +
scale_y_continuous(labels = comma) +
labs(title = "Sales Count by Residential Type",
y = "Count", colour = "Residential Type")
print(g9)
ggsave("images/sales_count_by_res_type.png", g9, width = 8, height = 5, dpi = 300)
# 7) Sales Ratio Trend -------------------------------------------------------
ratio_trend <- re_clean %>%
group_by(Year, Property.Type) %>%
summarise(Avg_Ratio = mean(Sales.Ratio), .groups = "drop")
g10 <- ggplot(ratio_trend, aes(Year, Avg_Ratio, colour = Property.Type)) +
geom_line() +
labs(title = "Avg Sales Ratio by Property Type",
y = "Average Sales Ratio", colour = "Property Type")
print(g10)
ggsave("images/sales_ratio_trend.png", g10, width = 8, height = 5, dpi = 300)
avg_sales_by_town <- re_clean %>%
group_by(Town) %>%
summarise(
Avg_Sale_Amount = mean(Sale.Amount, na.rm = TRUE),
Total_Sales = n()
) %>%
filter(Total_Sales > 100) %>%  # Focus on towns with >100 sales
arrange(desc(Avg_Sale_Amount))
top_towns <- head(avg_sales_by_town, 10)
g11 <- ggplot(top_towns, aes(x = reorder(Town, Avg_Sale_Amount), y = Avg_Sale_Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
scale_y_continuous(labels = scales::dollar_format(prefix = "$")) +
labs(title = "Top 10 Towns by Average Sale Amount",
x = "Town", y = "Average Sale Amount")
print(g11)
ggsave("images/top_10_towns_avg_sale.png", g11, width = 8, height = 5, dpi = 300)
town_name <- "Ansonia"
avg_sales_town <- re_clean %>%
filter(Town == town_name) %>%
group_by(Year) %>%
summarise(Avg_Sale_Amount = mean(Sale.Amount, na.rm = TRUE))
g12 <- ggplot(avg_sales_town, aes(x = Year, y = Avg_Sale_Amount)) +
geom_line(color = "darkgreen") +
geom_point() +
scale_y_continuous(labels = scales::dollar_format(prefix = "$")) +
labs(title = paste("Average Sale Amount Over Time in", town_name),
x = "Year", y = "Average Sale Amount") +
theme_minimal()
print(g12)
ggsave(paste0("images/avg_sale_over_time_", tolower(town_name), ".png"), g12, width = 8, height = 5, dpi = 300)
getwd()
cd "C:/Users/Rubby/R-PROGRAMMING/Real-Estate-R-Programming"
cd "C:/Users/Rubby/R-PROGRAMMING/Real-Estate-R-Programming"
getwd()
